name: üèû Deploy Thumbnail Generator

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "prod"
        type: choice
        options:
          - prod

jobs:
  build:
    name: üî® Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: services/thumbnail-generator/package-lock.json

      - name: Install dependencies
        working-directory: services/thumbnail-generator
        run: npm ci

      - name: Build application
        working-directory: services/thumbnail-generator
        run: npm run compile

      - name: Create deployment package
        working-directory: services/thumbnail-generator
        run: |
          mkdir -p dist
          cp -r build/* dist/
          cp package.json dist/
          cd dist
          npm install --omit=dev

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: function-artifacts
          path: services/thumbnail-generator/dist/
          retention-days: 1

  test:
    name: üß™ Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: services/thumbnail-generator/package-lock.json

      - name: Install dependencies
        working-directory: services/thumbnail-generator
        run: npm ci

      - name: Lint
        working-directory: services/thumbnail-generator
        run: npm run lint

      - name: Run tests (if available)
        working-directory: services/thumbnail-generator
        run: npm test || echo "No tests found, continuing deployment"

  deploy:
    name: üöÄ Deploy
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: function-artifacts
          path: function-source/

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create function ZIP
        run: |
          cd function-source
          zip -r ../function-source.zip .

      - name: Deploy Cloud Function
        run: |
          gcloud functions deploy process-uploaded-file \
            --gen2 \
            --region=europe-central2 \
            --runtime=nodejs20 \
            --source=function-source.zip \
            --entry-point=processUploadedFile \
            --memory=256MB \
            --trigger-event=google.cloud.storage.object.v1.finalized \
            --trigger-resource=${{ secrets.GCP_STORAGE_BUCKET }} \
            --service-account=${{ secrets.GCP_FUNCTION_SA }} \
            --timeout=60s

  notify:
    name: üì¢ Notify
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Success Discord notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "‚úÖ Function Deployment Completed"
          description: "Thumbnail generator Cloud Function has been successfully deployed"
          color: 0x57F287 # Green

      - name: Send Failure Discord notification
        uses: sarisia/actions-status-discord@v1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "‚ùå Function Deployment Failed"
          description: "There was a problem deploying the thumbnail generator Cloud Function"
          color: 0xED4245 # Red
